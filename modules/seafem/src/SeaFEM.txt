###################################################################################################################################
# Registry for ModuleName in the FAST Modularization Framework
# This Registry file is used to create MODULE ModuleName_Types, which contains all of the user-defined types needed in ModuleName.
# It also contains copy, destroy, pack, and unpack routines associated with each defined data types.
#
# Entries are of the form
# keyword <ModuleName/ModName> <TypeName>    <FieldType>    <FieldName>  <Dims>  <IO> <DNAME> <DESCRIP> <UNITS>
#
# Use ^ as a shortcut for the value from the previous line.
# See NWTC Programmer's Handbook for further information on the format/contents of this file.
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
# include Registry_NWTC_Library.txt

# ..... Initialization data .......................................................................................................
typedef   SeaFEM/SeaFEM     SeaFEM_InputFile       LOGICAL                  EchoFlag          -       -      -  "Echo the input file"   
#
typedef   SeaFEM/SeaFEM     InitInputType          INTEGER                  DummyInput                       -          -          -         "Supplied by Driver:  full path and filename for the SeaState module"    -
#
# Define outputs from the initialization routine here:
#                            
typedef   ^                 InitOutputType         INTEGER                  DummyInput    -     -      -  "The is the list of all HD-related output channel header strings (includes all sub-module channels)"    -
#                            
# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef   ^                  ContinuousStateType           R8Ki           UnusedStates              -          -          -         "placeholder for states"        -
#   
# Define discrete (nondifferentiable) states here:                                  
typedef   ^                  DiscreteStateType             R8Ki           UnusedStates              -          -          -         "placeholder for states"        -
#
# Define constraint states here:                                                    
typedef   ^                  ConstraintStateType           R8Ki           UnusedStates               -          -          -        "placeholder for states"        -
#
# Define any other states, including integer or logical states here:                
typedef   ^                  OtherStateType                DbKi           T                         -           -          -        "Current time of the simulation, serves to see if time has changed and update SeaFEM" seconds
typedef   ^                  OtherStateType                INTEGER        Out_flag                  -           -          -        "Flag that informs if SeaFEM output has been closed or not"    -
#
# ..... Misc/Optimization variables.................................................................................................
# Define any data that are used only for efficiency purposes (these variables are not associated with time):
#   e.g. indices for searching in an array, large arrays that are local variables in any routine called multiple times, etc.
typedef   ^                  MiscVarType            INTEGER                  DummyInput        -       -      -  "The output decimation counter" -
#
# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
#
typedef   ^                  ParameterType          INTEGER                  DummyInput        -       -      -  "Parameter data for the Waves2 module"  -
typedef  ^                   ParameterType          DbKi                     TMax              -       -      - "Supplied by Driver:  The total simulation time"    seconds
typedef  ^                   ParameterType          INTEGER                  Iterations        -       -      - "Total Number of iterations (corrections) that fast runs"    -
#
# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#
typedef   ^                  InputType              MeshType                 SeaFEMMesh           -       -      -     "Displacements at the SeaFEM Reference Point in the inertial frame" -#
#
# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef   ^                  OutputType             MeshType                 SeaFEMMesh        -       -      -   "Loads at the SeaFEM Reference Point" -